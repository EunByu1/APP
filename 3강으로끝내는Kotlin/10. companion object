package com.example.kotlin

// 다른 곳에서 객체 생성 불가능
class Book private constructor(val id:Int, val name:String){
    // companion object : private property & private method 읽어 올 수 있게 해줌
    // IdProvider 상속 받음
    companion object BookFacktory : IdProvider{  // companion object {} 가능
        override fun getId(): Int {
            return 444
        }
        val myBook:String = "new Book"

        fun create_1() = Book(id=0, name="animal farm")
        fun create_2() = Book(id=1, name=myBook)
        fun create_3() = Book(getId(), myBook)
    }
}

interface IdProvider {
    fun getId():Int
}

fun main(){
    val book_1 = Book.BookFacktory.create_1()
    val book_2 = Book.BookFacktory.create_2()
    val book_3 = Book.BookFacktory.create_3()
    val book_4 = Book.BookFacktory.getId()

    println("BookId : ${book_1.id}, BookName : ${book_1.name}")
    println("BookId : ${book_2.id}, BookName : ${book_2.name}")
    println("BookId : ${book_3.id}, BookName : ${book_3.name}")
    println(book_4)
}

